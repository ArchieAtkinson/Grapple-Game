make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Tue Jul 13 13:59:07 2021

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 1
# makefile (from 'Makefile', line 55)
INSTALL = install
# makefile (from 'Makefile', line 20)
INCLUDES = -I $(INC_PATH)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/dev/game_dev/Raylib/Grapple
# makefile (from 'Makefile', line 51)
SHELL = /bin/bash
# environment
SNAP_DATA = /var/snap/code/69
# makefile (from 'Makefile', line 66)
V := false
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
JOURNAL_STREAM = 8:54085
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from 'Makefile', line 100)
OBJECTS = $(SOURCES:$(SRC_PATH)/%.$(SRC_EXT)=$(BUILD_PATH)/%.o)
# environment
USERNAME = dev
# makefile (from 'Makefile', line 87)
SOURCES = $(shell find $(SRC_PATH) -name '*.$(SRC_EXT)' -printf '%T@\t%p\n' | sort -k 1nr | cut -f2-)
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'Makefile', line 107)
END_TIME = read st < $(TIME_FILE) ; $(RM) $(TIME_FILE) ; st=$$((`date '+%s'` - $$st - 86400)) ; echo `date -u -d @$$st '+%H:%M:%S'`
# environment
_ = /snap/code/69/usr/share/code/code
# environment
MANAGERPID = 1476
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /home/dev
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/69/usr/share/glib-2.0/schemas
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/ubuntu:@/tmp/.ICE-unix/1684,unix/ubuntu:/tmp/.ICE-unix/1684
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GDK_PIXBUF_MODULE_FILE = /home/dev/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
SNAP = /snap/code/69
# makefile (from 'Makefile', line 14)
COMPILE_FLAGS = -std=c99 -Wall -Wextra -Werror -g -ggdb3 -D_DEFAULT_SOURCE -DPLATFORM_DESKTOP
# makefile (from 'Makefile', line 9)
SRC_PATH = src
# environment
SNAP_VERSION = 2aeda6b1
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"VSCode","submitURL":"appcenter://code?aid=fba07a4d-84bd-4fc8-a125-9640fc8ce171&uid=ce0bda34-161b-4fbc-b944-0200fbe646d6&iid=ce0bda34-161b-4fbc-b944-0200fbe646d6&sid=ce0bda34-161b-4fbc-b944-0200fbe646d6","uploadToServer":true}
# environment
INVOCATION_ID = 323992bcc933407a97d6e38f1c7a65d2
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/69/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# makefile (from 'Makefile', line 25)
LDLIBS := -I/usr/local/include -I. -I/src -I/src/external -I/src/extras -L. -L/usr/local/lib -L/src -L -lm -lraylib -lGL -lm -lpthread -ldl -lrt -lX11 
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = 
# makefile (from 'Makefile', line 115)
USE_VERSION := false
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 89570
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/dev/game_dev/Raylib/Grapple
# default
.LOADED := 
# environment
SSH_AGENT_PID = 1649
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /home/dev
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/dev/.config/Code/CachedData/2aeda6b18e13c4f4f9edf6667158a6b8d408874b
# environment
LOGNAME = dev
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = uau1iBu7Hix6SlMVsCLWc1oirVVvmGl2cR04djv_U5CbG59w_N7J
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/dev/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 31)
DLINK_FLAGS = 
# environment
MAKELEVEL := 0
# environment
SNAP_REAL_HOME = /home/dev
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SNAP_USER_DATA = /home/dev/snap/code/69
# environment
SHLVL = 0
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-b39b4ad0-b4ac-4031-a33e-8265c5220c5a.sock
# default
MAKE_VERSION := 4.2.1
# environment
USER = dev
# environment
SNAP_REVISION = 69
# makefile
.DEFAULT_GOAL := debug
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from 'Makefile', line 3)
BIN_NAME := game
# makefile (from 'Makefile', line 33)
DESTDIR = /
# makefile (from 'Makefile', line 7)
SRC_EXT = c
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 92)
rwildcard = $(foreach d, $(wildcard $1*), $(call rwildcard,$d/,$2) $(filter $(subst *,%,$2), $d))
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 35)
INSTALL_PREFIX = usr/local
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-382e5fbe-1.58.1-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile
 
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
BREAKPAD_DUMP_LOCATION = /home/dev/.config/Code/exthost Crash Reports
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile', line 29)
RLINK_FLAGS = 
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'Makefile', line 105)
TIME_FILE = $(dir $@).$(notdir $@)_time
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# environment
SNAP_COOKIE = uau1iBu7Hix6SlMVsCLWc1oirVVvmGl2cR04djv_U5CbG59w_N7J
# environment
VSCODE_BROWSER_CODE_LOADING = bypassHeatCheck
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 67)
CMD_PREFIX := @
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from 'Makefile', line 18)
DCOMPILE_FLAGS = -D DEBUG
# environment
SNAP_NAME = code
# makefile (from 'Makefile', line 27)
LINK_FLAGS = $(LDLIBS)
# environment
LC_ALL = C
# makefile (from 'Makefile', line 56)
INSTALL_PROGRAM = $(INSTALL)
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from 'Makefile', line 12)
LIBS = 
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 102)
DEPS = $(OBJECTS:.o=.d)
# default
SUFFIXES := 
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 57)
INSTALL_DATA = $(INSTALL) -m 644
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'Makefile', line 16)
RCOMPILE_FLAGS = -D NDEBUG
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 10)
INC_PATH = inc
# makefile (from 'Makefile', line 106)
START_TIME = date '+%s' > $(TIME_FILE)
# environment
LANG = C
# environment
VSCODE_PID = 89619
# variable set hash-table stats:
# Load=152/1024=15%, Rehash=0, Collisions=46/271=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2053, inode 1581098): 14 files, no impossibilities.
# src (device 2053, inode 1719915): 5 files, no impossibilities so far.

# 19 files, no impossibilities in 2 directories.

# Implicit Rules

print-%:
#  recipe to execute (from 'Makefile', line 47):
	 @echo $*=$($*)

/%.o: src/%.c
#  recipe to execute (from 'Makefile', line 213):
	@echo "Compiling: $< -> $@"
	@$(START_TIME)
	$(CMD_PREFIX)$(CC) $(CFLAGS) $(INCLUDES) -MP -MMD -c $< -o $@
	@echo -en "\t Compile time: "
	@$(END_TIME)

# 2 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
/player.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
/objects.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: /game
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/14=0%
#  recipe to execute (from 'Makefile', line 194):
	@echo "Making symlink: $(BIN_NAME) -> $<"
	@$(RM) $(BIN_NAME)
	@ln -s $(BIN_PATH)/$(BIN_NAME) $(BIN_NAME)

.PHONY: debug release dirs install uninstall clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
/common.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
/background.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

uninstall:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 180):
	@echo "Removing $(DESTDIR)$(INSTALL_PREFIX)/bin/$(BIN_NAME)"
	@$(RM) $(DESTDIR)$(INSTALL_PREFIX)/bin/$(BIN_NAME)

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-07-13 13:59:03.87307935
#  File has been updated.
#  Successfully updated.

# makefile (from 'Makefile', line 75)
debug: CFLAGS :=  -std=c99 -Wall -Wextra -Werror -g -ggdb3 -D_DEFAULT_SOURCE -DPLATFORM_DESKTOP -D DEBUG
# makefile (from 'Makefile', line 76)
debug: LDFLAGS :=  -I/usr/local/include -I. -I/src -I/src/external -I/src/extras -L. -L/usr/local/lib -L/src -L -lm -lraylib -lGL -lm -lpthread -ldl -lrt -lX11  
# makefile (from 'Makefile', line 82)
debug: BIN_PATH := bin/debug
# makefile (from 'Makefile', line 81)
debug: BUILD_PATH := build/debug
debug: dirs
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=4/32=12%, Rehash=0, Collisions=6/11=55%
#  recipe to execute (from 'Makefile', line 142):
	@echo "Beginning debug build"
	@$(START_TIME)
	@$(MAKE) all --no-print-directory
	@echo -n "Total build time: "
	@$(END_TIME)
	./$(BIN_NAME)

dirs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 167):
	@echo "Creating directories"
	@mkdir -p $(dir $(OBJECTS))
	@mkdir -p $(BIN_PATH)

# Not a target:
/common.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
src/main.c:
#  Implicit rule search has been done.
#  Last modified 2021-07-13 13:34:27.853052806
#  File has been updated.
#  Successfully updated.

# Not a target:
/main.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

/game: /main.o /objects.o /player.o /common.o /background.o
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/14=0%
#  recipe to execute (from 'Makefile', line 200):
	@echo "Linking: $@"
	@$(START_TIME)
	$(CMD_PREFIX)$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	@echo -en "\t Link time: "
	@$(END_TIME)

# makefile (from 'Makefile', line 73)
release: CFLAGS :=  -std=c99 -Wall -Wextra -Werror -g -ggdb3 -D_DEFAULT_SOURCE -DPLATFORM_DESKTOP -D NDEBUG
# makefile (from 'Makefile', line 74)
release: LDFLAGS :=  -I/usr/local/include -I. -I/src -I/src/external -I/src/extras -L. -L/usr/local/lib -L/src -L -lm -lraylib -lGL -lm -lpthread -ldl -lrt -lX11  
# makefile (from 'Makefile', line 80)
release: BIN_PATH := bin/release
# makefile (from 'Makefile', line 79)
release: BUILD_PATH := build/release
release: dirs
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=4/32=12%, Rehash=0, Collisions=6/11=55%
#  recipe to execute (from 'Makefile', line 156):
	@echo "Beginning release build"
	@$(START_TIME)
	@$(MAKE) all --no-print-directory
	@echo -n "Total build time: "
	@$(END_TIME)
	./$(BIN_NAME)

# Not a target:
.DEFAULT:
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 186):
	@echo "Deleting $(BIN_NAME) symlink"
	@$(RM) $(BIN_NAME)
	@echo "Deleting directories"
	@$(RM) -r build
	@$(RM) -r bin

# Not a target:
/player.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
/objects.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

/main.o: src/main.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'main'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := /main.o
# automatic
# % := 
# automatic
# * := main
# automatic
# + := src/main.c
# automatic
# | := 
# automatic
# < := src/main.c
# automatic
# ^ := src/main.c
# automatic
# ? := src/main.c
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/32=12%
#  recipe to execute (from 'Makefile', line 213):
	@echo "Compiling: $< -> $@"
	@$(START_TIME)
	$(CMD_PREFIX)$(CC) $(CFLAGS) $(INCLUDES) -MP -MMD -c $< -o $@
	@echo -en "\t Compile time: "
	@$(END_TIME)

# Not a target:
/background.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# makefile (from 'Makefile', line 83)
install: BIN_PATH := bin/release
install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/1=0%
#  recipe to execute (from 'Makefile', line 174):
	@echo "Installing to $(DESTDIR)$(INSTALL_PREFIX)/bin"
	@$(INSTALL_PROGRAM) $(BIN_PATH)/$(BIN_NAME) $(DESTDIR)$(INSTALL_PREFIX)/bin

# files hash-table stats:
# Load=23/1024=2%, Rehash=0, Collisions=3/78=4%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 46 / storage = 379 B / avg = 8 B
# current buf: size = 8162 B / used = 379 B / count = 46 / avg = 8 B

# strcache performance: lookups = 101 / hit rate = 54%
# hash-table stats:
# Load=46/8192=1%, Rehash=0, Collisions=1/101=1%
# Finished Make data base on Tue Jul 13 13:59:07 2021

 
